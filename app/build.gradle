// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
  namespace 'com.nightlynexus.huelockscreen'

  compileSdkVersion versions.compileSdk

  defaultConfig {
    applicationId namespace

    minSdkVersion 30
    targetSdkVersion 35

    versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
    versionName "$versionMajor.$versionMinor.$versionPatch"

    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    buildConfigField 'String', 'address', properties.getProperty('address', '')
    buildConfigField 'String', 'access', properties.getProperty('access', '')
  }

  buildFeatures {
    buildConfig = true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_9
    targetCompatibility JavaVersion.VERSION_1_9
  }

  kotlinOptions {
    jvmTarget = '9'
  }

  lintOptions {
    abortOnError true
    warningsAsErrors true
    lintConfig rootProject.file('lint.xml')
    textReport true
    textOutput 'stdout'
    htmlReport true
    htmlOutput rootProject.file("lint-reports/${name}.html")
    // We run a full lint analysis as build part in CI, so skip vital checks for assemble tasks.
    checkReleaseBuilds false
  }

  buildTypes {
  }

  productFlavors {
    flavorDimensions = ['environment']

    internal {
      applicationIdSuffix '.internal'
      versionNameSuffix '-internal'
    }

    production {
    }
  }

  applicationVariants.configureEach { variant ->
    variant.outputs.configureEach { output ->
      outputFileName = "Hue Lockscreen ${variant.versionCode}.apk"
      if (variant.flavorName == 'internal') {
        outputFileName = 'Internal ' + outputFileName
      }
    }
  }
}

dependencies {
  implementation deps.moshi.core
  implementation deps.okhttp.core
  implementation deps.okio
  implementation deps.androidx.annotations
  implementation deps.kotlin.stdlibJdk8

  testImplementation deps.junit
  testImplementation deps.truth
}
